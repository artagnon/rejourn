#!/usr/bin/env python
#-*- Mode:Python -*-
from __future__ import with_statement
import os
import util

"""Generate the Makefile"""

indir = 'in'
outdir = 'out'
target = {}

for filename in os.listdir(indir):
    if filename.endswith('.txt'):
        # Find targets from the infile headers
        with open(os.path.join(indir, filename), 'r') as infh:
            raw_header = infh.read().split('\n---\n', 1)[0]
            header = util.parse_header(raw_header)
            title = header.get('title', 'No Title')
            permalink = header.get('permalink', util.build_slug(title))
            if not header.get('draft', None):
                target[filename] = os.path.join(outdir, permalink + '.html')

# Write the Makefile
with open('Makefile', 'w') as makefh:
    makefh.write(".PHONY: default test clean\n")
    # PHONY default: Build all targets
    makefh.write("default: "
                 + ' '.join(target.values()) + ' '
                 + os.path.join(outdir, 'index.html') + '\n')

    # Write the various targets
    for filename in target.keys():
        makefh.write(target[filename] + ': '
                     + os.path.join(indir, filename) + '\n\t'
                     + './build ' + filename[:-4] + '\n')

    # Special index target
    makefh.write(outdir + '/index.html: '
                 + ' '.join(map(lambda f: os.path.join(indir, f), target.keys()))
                 + '\n\t./build index '
                 + ' '.join(map(lambda f: f[:-4], target.keys())) + '\n')

    # Phony test and clean targets
    makefh.write("test:\n\tnosetests\n")
    makefh.write("clean:\n\t$(RM) "
                 + os.path.join(outdir, "*.html") + "\n")
    
        
